- name: "SCORED | 1.1.1.1 | AUDIT | Ensure mounting of cramfs filesystems is disabled"
  shell: modprobe -n -v cramfs
  register: cramfs_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.1 | AUDIT | Ensure mounting of cramfs filesystems is disabled"
  shell: lsmod | grep cramfs
  register: cramfs_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  copy:
      content: install cramfs /bin/true
      dest: /etc/modprobe.d/disable-cramfs.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "SCORED | 1.1.1.2 | AUDIT | Ensure mounting of freevxfs filesystems is disabled"
  shell: modprobe -n -v freevxfs
  register: freevxfs_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.2 | AUDIT | Ensure mounting of freevxfs filesystems is disabled"
  shell: lsmod | grep freevxfs
  register: freevxfs_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  copy:
      content: install freevxfs /bin/true
      dest: /etc/modprobe.d/disable-freevxfs.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.2
      - freevxfs

- name: "SCORED | 1.1.1.3 | AUDIT | Ensure mounting of jffs2 filesystems is disabled"
  shell: modprobe -n -v jffs2
  register: jffs2_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.3 | AUDIT | Ensure mounting of jffs2 filesystems is disabled"
  shell: lsmod | grep jffs2
  register: jffs2_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  copy:
      content: install jffs2 /bin/true
      dest: /etc/modprobe.d/disable-jffs2.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.3
      - jffs2

- name: "SCORED | 1.1.1.4 | AUDIT | Ensure mounting of hfs filesystems is disabled"
  shell: modprobe -n -v hfs
  register: hfs_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.4 | AUDIT | Ensure mounting of hfs filesystems is disabled"
  shell: lsmod | grep hfs
  register: hfs_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  copy:
      content: install hfs /bin/true
      dest: /etc/modprobe.d/disable-hfs.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.4
      - hfs

- name: "SCORED | 1.1.1.5 | AUDIT | Ensure mounting of hfsplus filesystems is disabled"
  shell: modprobe -n -v hfsplus
  register: hfsplus_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.5 | AUDIT | Ensure mounting of hfsplus filesystems is disabled"
  shell: lsmod | grep hfsplus
  register: hfsplus_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  copy:
      content: install hfsplus /bin/true
      dest: /etc/modprobe.d/disable-hfsplus.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.5
      - hfsplus

- name: "SCORED | 1.1.1.6 | AUDIT | Ensure mounting of squashfs filesystems is disabled"
  shell: modprobe -n -v squashfs
  register: squashfs_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.6 | AUDIT | Ensure mounting of squashfs filesystems is disabled"
  shell: lsmod | grep squashfs
  register: squashfs_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  copy:
      content: install squashfs /bin/true
      dest: /etc/modprobe.d/disable-squashfs.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.6
      - squashfs

- name: "SCORED | 1.1.1.7 | AUDIT | Ensure mounting of udf filesystems is disabled"
  shell: modprobe -n -v udf
  register: udf_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.7
      - udf

- name: "SCORED | 1.1.1.7 | AUDIT | Ensure mounting of udf filesystems is disabled"
  shell: lsmod | grep udf
  register: udf_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.7
      - udf

- name: "SCORED | 1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  copy:
      content: install udf /bin/true
      dest: /etc/modprobe.d/disable-udf.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.7
      - udf

- name: "SCORED | 1.1.1.8 | AUDIT | Ensure mounting of FAT filesystems is disabled"
  shell: modprobe -n -v vfat
  register: vfat_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.8
      - vfat

- name: "SCORED | 1.1.1.8 | AUDIT | Ensure mounting of FAT filesystems is disabled"
  shell: lsmod | grep vfat
  register: vfat_loaded_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.1.8
      - vfat

- name: "SCORED | 1.1.1.8 | PATCH | Ensure mounting of FAT filesystems is disabled"
  copy:
      content: install vfat /bin/true
      dest: /etc/modprobe.d/disable-vfat.conf
      owner: root
      group: root
      mode: "0644"
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.1.8
      - vfat

#- name: "SCORED | 1.1.1 | AUDIT | Create Separate Partition for /tmp"
# See not_automated.yml

- name: "SCORED | 1.1.3 | AUDIT | Ensure nodev option set on /tmp partition"
  shell: mount | grep "on /tmp " | grep nodev
  register: tmp_nodev_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.1.3

- name: "SCORED | 1.1.3 | PATCH | Ensure nodev option set on /tmp partition"
  command: /bin/true
  tags:
      - level1
      - scored
      - patch
      - rule_1.1.3

- name: "SCORED | 1.1.4 | AUDIT | Ensure nosuid option set on /tmp partition"
  shell: mount | grep /tmp | grep nosuid
  register: mount_nosuid_tmp_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.4

- name: "SCORED | 1.1.4 | PATCH | Ensure nosuid option set on /tmp partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.4

- name: "SCORED | 1.1.5 | AUDIT | Ensure noexec option set on /tmp partition"
  shell: mount | grep /tmp | grep noexec
  register: mount_noexec_tmp_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.5

- name: "SCORED | 1.1.5 | PATCH | Ensure noexec option set on /tmp partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.5

#- name: "SCORED | 1.1.6 | AUDIT | Ensure separate partition exists for /var"
# See not_automated.yml

#- name: "SCORED | 1.1.7 | AUDIT | Ensure separate partition exists for /var/tmp"
# See not_automated.yml

- name: "SCORED | 1.1.8 | AUDIT | Ensure nodev option set on /var/tmp partition"
  shell: mount | grep /var/tmp | grep nodev
  register: mount_nodev_var_tmp_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.8

- name: "SCORED | 1.1.8 | PATCH | Ensure nodev option set on /var/tmp partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.8

- name: "SCORED | 1.1.9 | AUDIT | Ensure nosuid option set on /var/tmp partition"
  shell: mount | grep /var/tmp | grep nosuid
  register: mount_nosuid_var_tmp_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.9

- name: "SCORED | 1.1.9 | PATCH | Ensure nosuid option set on /var/tmp partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.9

- name: "SCORED | 1.1.10 | AUDIT | Ensure noexec option set on /var/tmp partition"
  shell: mount | grep /var/tmp | grep noexec
  register: mount_noexec_var_tmp_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.10

- name: "SCORED | 1.1.10 | PATCH | Ensure noexec option set on /var/tmp partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.10

#- name: "SCORED | 1.1.11 | AUDIT | Ensure separate partition exists for /var/log"
# See not_automated.yml

#- name: "SCORED | 1.1.12 | AUDIT | Ensure separate partition exists for /var/log/audit"
# See not_automated.yml

#- name: "SCORED | 1.1.13 | AUDIT | Ensure separate partition exists for /home"
# See not_automated.yml

- name: "SCORED | 1.1.14 | AUDIT | Ensure nodev option set on /home partition"
  shell: mount | grep /home | grep nodev
  register: mount_nodev_home_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.14

- name: "SCORED | 1.1.14 | PATCH | Ensure nodev option set on /home partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.14

- name: "SCORED | 1.1.15 | AUDIT | Ensure nodev option set on /dev/shm partition"
  shell: mount | grep /dev/shm | grep nodev
  register: mount_nodev_dev_shm_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.15

- name: "SCORED | 1.1.15 | PATCH | Ensure nodev option set on /dev/shm partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.15

- name: "SCORED | 1.1.16 | AUDIT | Ensure nosuid option set on /dev/shm partition"
  shell: mount | grep /dev/shm | grep nosuid
  register: mount_nosuid_dev_shm_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.16

- name: "SCORED | 1.1.16 | PATCH | Ensure nosuid option set on /dev/shm partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.16

- name: "SCORED | 1.1.17 | AUDIT | Ensure noexec option set on /dev/shm partition"
  shell: mount | grep /dev/shm | grep noexec
  register: mount_noexec_dev_shm_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.17

- name: "SCORED | 1.1.17 | PATCH | Ensure noexec option set on /dev/shm partition"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.17

- name: "NOTSCORED | 1.1.18 | AUDIT | Ensure nodev option set on removable media partitions"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.18

- name: "NOTSCORED | 1.1.18 | PATCH | Ensure nodev option set on removable media partitions"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.18

- name: "NOTSCORED | 1.1.19 | AUDIT | Ensure nosuid option set on removable media partitions"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.19

- name: "NOTSCORED | 1.1.19 | PATCH | Ensure nosuid option set on removable media partitions"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.19

- name: "NOTSCORED | 1.1.20 | AUDIT | Ensure noexec option set on removable media partitions"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.20

- name: "NOTSCORED | 1.1.20 | PATCH | Ensure noexec option set on removable media partitions"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.20

- name: "SCORED | 1.1.21 | AUDIT | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
  register: sticky_bit_on_worldwritable_dirs_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.21

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  when: sticky_bit_on_worldwritable_dirs_audit.rc
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.21

- name: "SCORED | 1.1.22 | AUDIT | Disable Automounting"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.1.22

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.1.22

- name: "NOTSCORED | 1.2.1 | AUDIT | Ensure package manager repositories are configured"
  command: yum repolist
  register: yum_repositories_configured_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.1

- name: "NOTSCORED | 1.2.1 | PATCH | Ensure package manager repositories are configured"
  command: /bin/true
  when: yum_repositories_configured_audit.rc
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.1

- name: "SCORED | 1.2.2 | AUDIT | Ensure gpgcheck is globally activated"
  shell: grep ^gpgcheck /etc/yum.repos.d/*|grep -v '0$'
  register: yum_gpgcheck_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.2

- name: "SCORED | 1.2.2 | PATCH | Ensure gpgcheck is globally activated"
  command: /bin/true
  when: yum_gpgcheck_audit.rc
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.2

- name: "NOTSCORED | 1.2.3 | AUDIT | Ensure GPG keys are configured"
  command: rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'
  register: yum_gpg_keys_configured_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.3

- name: "NOTSCORED | 1.2.3 | PATCH | Ensure GPG keys are configured"
  command: /bin/true
  when: yum_gpg_keys_configured_audit.rc
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.3

- name: "NOTSCORED | 1.2.4 | AUDIT | Ensure Red Hat Network or Subscription Manager connection is configured"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.2.4

- name: "NOTSCORED | 1.2.4 | PATCH | Ensure Red Hat Network or Subscription Manager connection is configured"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.2.4

- name: "NOTSCORED | 1.2.5 | AUDIT | Disable the rhnsd Daemon"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - audit
      - rule_1.2.5

- name: "NOTSCORED | 1.2.5 | PATCH | Disable the rhnsd Daemon"
  command: /bin/true
  tags:
      - level2
      - patch
      - rule_1.2.5

- name: "SCORED | 1.3.1 | AUDIT | Ensure AIDE is installed"
  command: rpm -q aide
  register: aide_installed_audit
  always_run: yes
  changed_when: no
  failed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - aide
      - audit
      - rule_1.3.1

- name: "SCORED | 1.3.1 | AUDIT | Ensure AIDE is installed"
  stat:
      path: /var/lib/aide/aide.db.gz
  register: aide_db
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - aide
      - audit
      - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  yum:
      name: aide
      state: present
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  shell: /usr/sbin/aide --init && cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
  when: not aide_db.stat.exists
  async: 45
  poll: 0
  tags:
      - level1
      - scored
      - aide
      - patch
      - rule_1.3.1

- name: "SCORED | 1.3.2 | AUDIT | Ensure filesystem integrity is regularly checked"
  shell: grep aide {{ rhel7cis_aide_cron['cron_file'] }} /etc/cron.*/*
  register: aide_cron_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - audit
      - rule_1.3.2

- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check weekly
      cron_file: "{{ rhel7cis_aide_cron['cron_file'] }}"
      user: "{{ rhel7cis_aide_cron['cron_user'] }}"
      minute: "{{ rhel7cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel7cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel7cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel7cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel7cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel7cis_aide_cron['aide_job'] }}"
  tags:
      - level1
      - scored
      - aide
      - file_integrity
      - patch
      - rule_1.3.2

- name: "SCORED | 1.4.1 | AUDIT | Ensure permissions on bootloader config are configured"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.4.1

- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  command: /bin/true
  tags:
      - level1
      - scored
      - patch
      - rule_1.4.1

- name: "SCORED | 1.4.2 | AUDIT | Ensure bootloader password is set"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - audit
      - rule_1.4.2

- name: "SCORED | 1.4.2 | PATCH | Ensure bootloader password is set"
  command: /bin/true
  tags:
      - level1
      - scored
      - patch
      - rule_1.4.2

- name: "NOTSCORED | 1.4.3 | AUDIT | Ensure authentication required for single user mode"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.4.3

- name: "NOTSCORED | 1.4.3 | PATCH | Ensure authentication required for single user mode"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.4.3

- name: "SCORED | 1.5.1 | AUDIT | Ensure core dumps are restricted"
  shell: grep -E "^\*\s*hard\s*core\s*" /etc/security/limits.conf /etc/security/limits.d/* | awk '{print $4}'
  register: coredump_limits_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - limits
      - audit
      - rule_1.5.1

- name: "SCORED | 1.5.1 | AUDIT | Ensure core dumps are restricted"
  shell: "sysctl fs.suid_dumpable | awk '{print $3}' | grep 0"
  register: coredump_sysctl_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - sysctl
      - audit
      - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  lineinfile:
      state: present
      dest: /etc/security/limits.conf
      regexp: '^#?\\*.*core'
      line: '*                hard    core            0'
      insertbefore: '^# End of file'
  when: coredump_limits_audit.rc
  tags:
      - level1
      - scored
      - limits
      - patch
      - rule_1.5.1

- name: "SCORED | 1.5.1 | PATCH | Ensure core dumps are restricted"
  sysctl:
      name: fs.suid_dumpable
      value: 0
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when: coredump_sysctl_audit.rc
  tags:
      - level1
      - scored
      - sysctl
      - patch
      - rule_1.5.1

- name: "NOTSCORED | 1.5.2 | AUDIT | Ensure XD/NX support is enabled"
  shell: dmesg | grep NX| grep Execute
  register: xdnx_support_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.5.2

- name: "NOTSCORED | 1.5.2 | PATCH | Ensure XD/NX support is enabled"
  command: /bin/true
  when: xdnx_support_audit.rc
  tags:
      - level1
      - level2
      - patch
      - rule_1.5.2

- name: "SCORED | 1.5.3 | AUDIT | Ensure address space layout randomization (ASLR) is enabled"
  shell: "sysctl kernel.randomize_va_space | awk '{print $3}' | grep 2"
  register: aslr_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - scored
      - aslr
      - audit
      - rule_1.5.3

- name: "SCORED | 1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: 2
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  when: aslr_audit.rc
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.3

- name: "SCORED | 1.5.4 | AUDIT | Ensure prelink is disabled"
  command: rpm -q prelink
  register: prelink_disabled_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.5.4

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  command: prelink -ua
  when: prelink_disabled_audit.rc == 0
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: "SCORED | 1.5.4 | PATCH | Ensure prelink is disabled"
  yum:
    name: prelink
    state: absent
  when: prelink_disabled_audit.rc == 0
  tags:
      - level1
      - scored
      - patch
      - rule_1.5.4

- name: "SCORED | 1.6.1.1 | AUDIT | Ensure SELinux is not disabled in bootloader configuration"
  shell: grep -E "^\s*linux.*(selinux|enforcing)=0" /boot/grub2/grub.cfg
  register: selinux_grub_audit
  always_run: yes
  changed_when: no
  failed_when: selinux_grub_audit.rc == 0
  ignore_errors: yes
  tags:
      - level2
      - scored
      - audit
      - rule_1.6.1.1

- name: "SCORED | 1.6.1.1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.1

- name: "SCORED | 1.6.1.1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  shell: grub2-mkconfig > /boot/grub2/grub.cfg
  when: selinux_grub_patch.changed
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.1

- name: "SCORED | 1.6.1.2 | AUDIT | Ensure the SELinux state is enforcing"
  shell: getenforce|grep Enforcing
  register: selinux_state_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  when: not rhel7cis_selinux_disable
  tags:
      - level2
      - scored
      - selinux
      - audit
      - rule_1.6.1.2

# - name: "SCORED | 1.6.1.2 | AUDIT | Ensure the SELinux state is enforcing"
#   shell: sestatus|grep "SELinux status\: enabled"
#   register: selinux_running_state_audit
#   always_run: yes
#   changed_when: no
#   ignore_errors: yes
#   tags:
#       - level2
#       - scored
#       - selinux
#       - audit
#       - rule_1.6.1.2

- name: "SCORED | 1.6.1.2 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  when: not rhel7cis_selinux_disable
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.2

- name: "SCORED | 1.6.1.3 | AUDIT | Ensure SELinux policy is configured"
  shell: grep 'SELINUXTYPE=targeted' /etc/selinux/config
  register: selinux_policy_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - scored
      - selinux
      - audit
      - rule_1.6.1.3

- name: "SCORED | 1.6.1.3 | PATCH | Ensure SELinux policy is configured"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  when: not rhel7cis_selinux_disable
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.3

- name: "SCORED | 1.6.1.4 | AUDIT | Ensure SETroubleshoot is not installed"
  command: rpm -q setroubleshoot
  register: setroubleshoot_removed_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - scored
      - selinux
      - audit
      - rule_1.6.1.4

- name: "SCORED | 1.6.1.4 | PATCH | Ensure SETroubleshoot is not installed"
  yum:
      name: setroubleshoot
      state: absent
  tags:
      - level2
      - scored
      - selinux
      - patch
      - rule_1.6.1.4

- name: "SCORED | 1.6.1.5 | AUDIT | Ensure the MCS Translation Service (mcstrans) is not installed"
  command: rpm -q mcstrans
  register: mcstrans_removed_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - scored
      - audit
      - rule_1.6.1.5

- name: "SCORED | 1.6.1.5 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  yum:
      name: mcstrans
      state: absent
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.1.5

- name: "SCORED | 1.6.1.6 | AUDIT | Ensure no unconfined daemons exist"
  shell: "ps -eZ | egrep 'initrc' | egrep -vw 'tr|ps|egrep|bash|awk' | tr ':' ' ' | awk '{
print $NF }'"
  register: unconfined_daemon_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - scored
      - audit
      - rule_1.6.1.6

- name: "SCORED | 1.6.2 | AUDIT | Ensure SELinux is installed"
  command: rpm -q libselinux
  register: selinux_installed_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level2
      - scored
      - selinux
      - audit
      - rule_1.6.2

- name: "SCORED | 1.6.2 | PATCH | Ensure SELinux is installed"
  yum:
      name: libselinux
      state: present
  tags:
      - level2
      - scored
      - patch
      - rule_1.6.2

- name: "SCORED | 1.7.1.1 | AUDIT | Ensure message of the day is configured properly"
  command: egrep '(\\v|\\r|\\m|\\s)' /etc/motd
  register: configured_etc_motd_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.1.1

- name: "SCORED | 1.7.1.1 | PATCH | Ensure message of the day is configured properly"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.1.1

- name: "NOTSCORED | 1.7.1.2 | AUDIT | Ensure local login warning banner is configured properly"
  command: egrep '(\\v|\\r|\\m|\\s)' /etc/issue
  register: configured_etc_issue_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.1.2

- name: "NOTSCORED | 1.7.1.2 | PATCH | Ensure local login warning banner is configured properly"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.1.2

- name: "NOTSCORED | 1.7.1.3 | AUDIT | Ensure remote login warning banner is configured properly"
  command: egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
  register: configured_etc_issue_net_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.1.3

- name: "NOTSCORED | 1.7.1.3 | PATCH | Ensure remote login warning banner is configured properly"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.1.3

- name: "NOTSCORED | 1.7.1.4 | AUDIT | Ensure permissions on /etc/motd are configured"
  shell: stat -L -c "%a %u %g" /etc/motd  | egrep "644 0 0"
  register: permissions_etc_motd_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.1.4

- name: "NOTSCORED | 1.7.1.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.1.4

- name: "SCORED | 1.7.1.5 | AUDIT | Ensure permissions on /etc/issue are configured"
  shell: stat -L -c "%a %u %g" /etc/issue  | egrep "644 0 0"
  register: permissions_etc_issue_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.1.5

- name: "SCORED | 1.7.1.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.1.5

- name: "NOTSCORED | 1.7.1.6 | AUDIT | Ensure permissions on /etc/issue.net are configured"
  shell: stat -L -c "%a %u %g" /etc/issue.net  | egrep "644 0 0"
  register: permissions_etc_issue_net_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.1.6

- name: "NOTSCORED | 1.7.1.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.1.6

- name: "SCORED | 1.7.2 | AUDIT | Ensure GDM login banner is configured"
  command: /bin/true
  register: result
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.7.2

- name: "SCORED | 1.7.2 | PATCH | Ensure GDM login banner is configured"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.7.2

- name: "NOTSCORED | 1.8 | AUDIT | Ensure updates, patches, and additional security software are installed"
  command: yum check-update
  register: software_updates_audit
  always_run: yes
  changed_when: no
  ignore_errors: yes
  tags:
      - level1
      - level2
      - audit
      - rule_1.8

- name: "NOTSCORED | 1.8 | PATCH | Ensure updates, patches, and additional security software are installed"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_1.8
